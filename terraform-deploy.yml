parameters:
  storageAccount: ""
  armServiceConnection: ""
  idamTenantId: ""
  idamClientId: ""
  idamClientSecret: ""
  environment: ""

steps:
  - pwsh: |
      @{
        idam_tenant_id = $env:idam_Tenant_Id
        idam_client_id = $env:idam_Client_Id
        idam_client_secret = $env:idam_Client_Secret
      } | ConvertTo-Json | Set-Content params.auto.tfvars.json -force
    displayName: "Create Param File"
    condition: succeeded()
    env:
      idam_Tenant_Id: ${{ parameters.idamTenantId }}
      idam_Client_Id: ${{ parameters.idamClientId }}
      idam_Client_Secret: ${{ parameters.idamClientSecret }}

  - task: AzureCLI@2
    inputs:
      azureSubscription: ${{ parameters.armServiceConnection }}
      scriptType: pscore
      scriptLocation: inlineScript
      AddSpnToEnvironment: true
      inlineScript: |
        echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$env:servicePrincipalId"
        echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$env:servicePrincipalKey"
        echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(az account show --query 'id' --output tsv)"
        echo "##vso[task.setvariable variable=ARM_TENANT_ID]$(az account show --query 'tenantId' --output tsv)"
        echo "##vso[task.setvariable variable=ARM_ACCESS_KEY]$(az storage account keys list -n ${{ parameters.storageAccount }} --query [0].value --output tsv)"
    displayName: Terraform Prepare Login
    condition: succeeded()
  
  - task: DownloadPipelineArtifact@2
    displayName: Download Terraform Plan
    inputs:
      artifactName: tfplan-${{ parameters.environment }}

  - task: AzureCLI@2
    inputs:
      azureSubscription: ${{ parameters.armServiceConnection }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        terraform apply -auto-approve plan.tfplan
    displayName: Terraform apply
    condition: succeeded()
